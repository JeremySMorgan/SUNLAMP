
str_ = "0.01 [-3.75, 0.0, 0.7, 6.283185307179586, -0.0, 6.283185307179586, 0.0, -0.0, -0.0, -0.7853979999999998, -1.5706999997329305, -1.5707000003818141, 0.7853979999999989, -0.0, 0.0, -0.0, -0.0, 0.7853979999999998, 1.570700000267121, 1.5706999996181619, -0.7853980000000007, -0.0, 0.0, -0.0, -0.0, -0.7853979999999998, -1.5707000000105715, -1.5706999999929527, 0.7853979999999998, -0.0, 0.0, -0.0, -0.0, 0.7853979999999998, 1.5707000000105706, 1.5706999999929527, -0.7853979999999998, -0.0]"

t = float(str_.split(" [")[0])

str_ = str_.split(" [")[1]

str_ = str_.replace("[","")
str_ = str_.replace("]","")

comma_split = str_.split(",")

# for i in comma_split:
#     print(float(i))




# i = 0
# for base_x in decimal_range(.5, .7, .025):
#     for base_y in decimal_range(.5, .7, .025):
#         for torso_z in [.525, .6, .7]:
#             for d1 in decimal_range(.875, 1, .025):
#                 for d2 in decimal_range(.875, 1, .025):
#                     print(i)
#                     i += 1

import numpy as np
import matplotlib.pyplot as plt

xsize, ysize = 100, 120
# x = np.arange(0, 32)
# y = np.arange(0, 32)
arr = np.zeros((ysize, xsize))
# arr[0, 0] = 1

cx = 12
cy = 16
r = 5

subarr = arr[cx-r:cx+r, cy-r:cy+r]

for x in range(subarr.shape[0]):
    for y in range(subarr.shape[1]):
        if np.sqrt((x-r)**2 + (y-r)**2) < r:
            subarr[x, y] = 1

arr[cx-r:cx+r, cy-r:cy+r] = subarr

# mask = (x[np.newaxis, :] - cx)**2 + (y[:, np.newaxis] - cy)**2 < r**2

# arr[mask] = 123.
#
# This plot shows that only within the circle the value is set to 123.
# plt.figure()
# plt.plot(arr)
# plt.colorbar()
# plt.imshow(arr)
# plt.show()


def format_time(s: float):

    nb_mins = int(np.floor(s / 60))
    nb_secs = int(s - nb_mins * 60)

    if nb_secs >= 10:
        secs_str = str(nb_secs)
    elif nb_secs > 0:
        secs_str = "0"+str(nb_secs)
    else:
        secs_str = "00"

    return str(nb_mins)+":"+str(secs_str)

# print(format_time(9))
# print(format_time(60.001))
# print(format_time(59))
# print(format_time(69))

from src.utils.math_utils import MathUtils

max_obst_height_in_path = 1.3
margin = .2
translation_height = max_obst_height_in_path + margin
upward_pct_time = .2
translation_pct_time = 1 - 2 * upward_pct_time

def get_linear_4d_mid_motion_vals(start, end, _i, _i_max):
    x_delta = end[0] - start[0]
    y_delta = end[1] - start[1]
    z_delta = end[2] - start[2]
    w_delta = end[3] - start[3]
    try:
        x = start[0] + (_i / _i_max) * x_delta
    except ZeroDivisionError:
        x = start[0]
    try:
        y = start[1] + (_i / _i_max) * y_delta
    except ZeroDivisionError:
        y = start[1]
    try:
        z = start[2] + (i / _i_max) * z_delta
    except ZeroDivisionError:
        z = start[2]
    try:
        w = start[3] + (_i / _i_max) * w_delta
    except ZeroDivisionError:
        w = start[3]

    return [x, y, z, w]


def get_linear_3d_mid_motion_vals(start, end, _i, _i_max):
    _4d_ret = get_linear_4d_mid_motion_vals(start + [0], end + [0], _i, _i_max)
    _3d_ret = _4d_ret[0:3]
    return _3d_ret


def get_linear_mid_motion_xyzR(xyzR0, xyzRf, _i, _imax):
    xyz0 = xyzR0[0:3]
    xyzf = xyzRf[0:3]
    xyz = get_linear_3d_mid_motion_vals(xyz0, xyzf, _i, _imax)
    R = MathUtils.mid_motion_rotation_matrix(xyzR0[3], xyzRf[3], _i, _imax)
    return xyz + [R]


def rectangular_path_end_eff_xyzR(_endeff_xyzR_0, _endeff_xyzR_f, _i, _imax):
    _endeff_xyzR_i = MathUtils.mid_motion_rotation_matrix(_endeff_xyzR_0[3], _endeff_xyzR_f[3], _i, _imax)
    if _i / _imax <= upward_pct_time:
        starting_z = _endeff_xyzR_0[2]
        pct_raised = (_i / _imax) / upward_pct_time
        delta_z = (translation_height - starting_z) * pct_raised
        ret = [_endeff_xyzR_0[0], _endeff_xyzR_0[1], _endeff_xyzR_0[2] + delta_z, _endeff_xyzR_i]
        # print(f"[Section 1]\t_i:{_i} / {_imax}: {round(_i/_imax, 3)}/{upward_pct_time}\t pct_raised:{round(pct_raised,2)}\t delta_z: {round(delta_z, 2)}")
    elif upward_pct_time < _i / _imax < 1 - upward_pct_time:
        start = [_endeff_xyzR_0[0], _endeff_xyzR_0[1], translation_height]
        end = [_endeff_xyzR_f[0], _endeff_xyzR_f[1], translation_height]
        k = _i - upward_pct_time * _imax
        kmax = _imax - 2 * _imax * upward_pct_time
        xyz = self.get_linear_3d_mid_motion_vals(start, end, k, kmax)
        ret = xyz + [_endeff_xyzR_i]
        # print(f"[Section 2]\t _i/_imax:{round(_i / _imax, 3)}\t k_i:{round(k, 2)}/{kmax}\t pct:{round(pct, 2)} x0:{start[0]} \t xf:{end[0]}\t x_i:{round(ret[0], 3)}")
    else:
        starting_z = translation_height
        pct_lowered = ((_i / _imax) - upward_pct_time - translation_pct_time) / upward_pct_time
        delta_z = (_endeff_xyzR_f[2] - starting_z) * pct_lowered
        z_des = starting_z + delta_z
        ret = [_endeff_xyzR_f[0], _endeff_xyzR_f[1], z_des, _endeff_xyzR_i]
        # print(f"[Section 3]\t_i:{_i} / {_imax}: {round(_i/_imax, 3)} \t pct_lowered: {round(pct_lowered,3)}\t delta_z: {round(delta_z, 3)} \t z_des: {round(z_des, 2)}")
    return ret

i_vals = []
zs = []
xs = []
ys = []

I = [1, 0, 0, 0, 1, 0, 0, 0, 1]
xyzR0 = [1, 0, 1, I]
xyzRf = [1.75, .25, 1, I]

imax = 200
for i in range(imax):

    xyzRi = rectangular_path_end_eff_xyzR(xyzR0, xyzRf, i, imax)
    i_vals.append(i)
    zs.append(xyzRi[2])
    xs.append(xyzRi[0])
    ys.append(xyzRi[1])

plt.scatter(i_vals, zs, s=13)
plt.scatter(i_vals, xs, s=13)
plt.show()





# Test get_linear_4d_mid_motion_vals
# s0 = [1, 0, 0, 0]
# sf = [2, 0, 0, 0]
#
# ks = []
# ss = []
# kmax = 100
# for k in range(kmax):
#     ks.append(k)
#     ss.append(get_linear_4d_mid_motion_vals(s0, sf, k, kmax)[0])
#
# plt.scatter(ks, ss, s=13)
# plt.show()


d1 = [0.025413708537298074, 0.05101299883189192, 0.04179447377946133, 0.03507680223905285, 0.04738695558400363, 0.027138695451757622, 0.06389285350774965, 0.040669917445416814, 0.030387582956681564, 0.03854987468147453, 0.03351440485475621, 0.04319490150018046, 0.059585843652806725, 0.036412195368083725, 0.10131335823050791, 0.03528581564201816, 0.06946354166183188, 0.013728062923795914, 0.06520967401278743, 0.046934246729893214, 0.04855665978135004, 0.045502951822411486, 0.03421026775838065, 0.04364494465373414, 0.019139397057736263, 0.03753133402836295, 0.030565793162525168, 0.04279742112909046, 0.04226683348663407, 0.05151787530307117, 0.04546849946107101, 0.05564133972086327, 0.03708965218786742, 0.026473737860403856, 0.05765055274869546, 0.040666438928841364, 0.03689635725884881, 0.03525066474216976, 0.06572145884659086, 0.02635706568964763, 0.03716165244794367, 0.03140416003788493, 0.046042382728906484, 0.04946687948322803, 0.03722651902879437, 0.03533112849529263, 0.006043778071556094, 0.031156560575355874, 0.03346679412288989, 0.04061790145607458, 0.043027892860391104, 0.03305856091489989, 0.019514337902550416, 0.0209037655146056, 0.03426670954617905, 0.019656266594208924, 0.05246792997288652, 0.036498447966021974, 0.04716815404623631, 0.01679160957691872, 0.05172263311123748, 0.05381529415202135, 0.05190773156029316, 0.02196064826675613, 0.02716644812484348, 0.04640066184877201, 0.04319963653626813, 0.034414190962190894, 0.040811462492811756, 0.0334825633965119, 0.01775762211077661, 0.04160778825256828, 0.0299998585187784, 0.05310376801733363, 0.06560400970375024, 0.05753269426343599, 0.022505786850165244, 0.04673716430811403, 0.028088036855597798, 0.041538307101331995, 0.04306053088504802, 0.03831584517450004, 0.030340077416206146, 0.03190135098471414, 0.03377934957980866, 0.022122363316415594, 0.01932284312748811, 0.06277218987135669, 0.04102889712767199, 0.025202579957872118, 0.0594656556812696, 0.03367569379599687, 0.035164201143674134, 0.05532963189112894, 0.051168987270881594, 0.030101634279216416, 0.034318623117176816, 0.031612053296187215, 0.04313771442701264, 0.025028345499690907, 0.9636526401253905, 0.028432280041231772, 0.04420424103211085, 0.022097863021186548, 0.009091597803561058, 0.019419515287011913, 0.03173920834353272, 0.03248836765173857, 0.027895814991860668, 0.02308331460026669, 0.01943811673150886, 0.016887974169694897, 0.015096858697260629, 0.013789013502102154, 0.012786538753522647, 0.011983137974556524, 0.011315962897837206, 0.010746855352122164, 0.010251554812003016, 0.009813816828986521, 0.009422228137482724, 0.009068439725431476, 0.008746143903965553, 0.008450451736912168, 0.008177495165042181, 0.00803676452667812, 0.007998494552209579, 0.007960913706937855, 0.007924006758095903, 0.007887758949758794, 0.007852156035738744, 0.007817184296176727, 0.00778283054384632, 0.007749082123490236, 0.007715926906951331, 0.007683353285385497, 0.007651350159735948, 0.007619906930288689, 0.0075890134855476354, 0.007558660191352651, 0.007528837879601458, 0.007499537837798442, 0.007470751798577258, 0.007442471930052541, 0.00741469082646784, 0.0073874014997188375, 0.0073605973712354, 0.007334272264645669, 0.00730842039909696, 0.00728303638317529]
d2 = [0.07916345100041444, 0.020397658700580523, 0.020972181466130335, 0.05095964030665123, 0.1770227498948772, 0.15853404364448231, 0.028699521243268578, 0.022798362112228743, 0.06539079570493023, 0.06890762909894232, 0.033184045024922115, 0.0622820590055051, 0.03731677546140988, 0.06989382268260891, 0.03475127577761272, 0.07902538705941664, 0.04387129660624001, 0.07548857243092577, 0.0593078996844465, 0.059007826233580474, 0.04538319179623951, 0.05958304710953932, 0.07372909859914012, 0.07293248024560861, 0.06602977628298445, 0.03140234836256317, 0.0735981852257106, 0.1891961877092192, 0.0, 0.0, 0.0043217182952643984, 0.0, 0.0, 0.0059059452197325335, 0.0, 0.0, 0.006121073953931022, 0.0, 0.0, 0.006165050407241246, 0.0, 0.0, 0.0061872216387905965, 0.0, 0.0, 0.006206213115739212, 0.0, 0.0, 0.006224338345316882, 0.0, 0.0, 0.006241876541023483, 0.0, 0.0, 0.0062588523369682125, 0.0, 0.0, 0.006275258334324851, 0.0, 0.0, 0.006291083079128734, 0.0, 0.0, 0.006306314607414487, 0.0, 0.0, 0.006320940905544914, 0.0, 0.0, 0.006334949979130089, 0.0, 0.0, 0.006348329872500669, 0.0, 0.0, 0.00636106868203945, 0.0, 0.0, 0.006373154569293105, 0.0, 0.0, 0.0063845757743328235, 0.0, 0.0, 0.006395320629711154, 0.0, 0.0, 0.006405377574703497, 0.0, 0.0, 0.0064147351701977495, 0.0, 0.0, 0.006423382114061016, 0.0, 0.0, 0.0064313072568603635, 0.0, 0.0, 0.006438499618303117, 0.0, 0.0, 0.006444948403963369, 0.0, 0.0, 0.0064506430226715095, 0.0, 0.0, 0.00645557310427014, 0.0, 0.0, 0.006459728517976493, 0.0, 0.0, 0.006463099391123106, 0.0, 0.0, 0.006465676128486253, 0.0, 0.0, 0.006467449431911132, 0.0, 0.0, 0.006468410320594975, 0.0, 0.0, 0.006468550151568331, 0.0, 0.0, 0.0064678606407496675, 0.0, 0.0, 0.006466333884264652, 0.0, 0.0, 0.006463962380156785, 0.0, 0.0, 0.006460739050367703, 0.0, 0.0, 0.006456657262965293, 0.0, 0.0, 0.006451710854627812, 0.0, 0.0, 0.006445894153244036, 0.0, 0.0, 0.006439202000567468, 0.0, 0.0, 0.006431629774991565, 0.0, 0.0, 0.006423173414228933, 0.0, 0.0, 0.006413829437829532, 0.0, 0.0, 0.0064035949696060745, 0.0, 0.0, 0.006392467759612552, 0.0, 0.0, 0.0063804462058983935, 0.0, 0.0, 0.006367529375639003, 0.0, 0.0, 0.006353717025657901, 0.0, 0.0, 0.006339009622443159, 0.0, 0.0, 0.006331030651540059, 0.0, 0.0, 0.006340170399396605, 0.0, 0.0, 0.0063484675022642545, 0.0, 0.0, 0.006355907184089071, 0.0, 0.0, 0.006362474902442239, 0.0, 0.0, 0.006368156388045998, 0.0, 0.0, 0.006372937685604763, 0.0]
d3 = [0.04629796468486447, 0.04607616227756006, 0.05305566963118924, 0.049116717884594596, 0.03811056853708883, 0.06482140386441237, 0.03143785027964352, 0.04958159029071485, 0.053804307323209954, 0.03937565770479046, 0.03169746088170511, 0.030554656168358285, 0.047926582499599135, 0.031385702441861785, 0.05669426890553342, 0.053560102567038914, 0.040189393009741226, 0.05466280563213499, 0.07791908591975916, 0.032706617278798866, 0.02533260087548239, 0.02013883449252818, 0.024449544199189877, 0.01035351859647382, 0.0330718620310082, 0.05362882420857318, 0.047018846566709405, 0.04010324983232616, 0.050828197973681766, 0.027846465469560933, 0.02067630097645945, 0.06309224756965759, 0.02903995259738057, 0.05522292680972396, 0.027811105469462527, 0.024239209814112872, 0.0451212279900739, 0.07007790859887653, 0.02688242297210075, 0.03899074093118604, 0.06202770117615408, 0.03301610199138505, 0.02996039801389605, 0.014093346568474718, 0.05514461121006442, 0.05376278520415578, 0.023689324226681796, 0.011959246712831106, 0.045418018009787176, 0.04244553924999561, 0.046639847100504284, 0.06434535665097219, 0.06603460434644415, 0.055923781958444385, 1.0140839530809815, 0.007408901397790824, 0.00824961660544521, 0.008172319311189113, 0.008035971789023932, 0.007922374459212178, 0.007826183324592395, 0.00773953547689421, 0.007658304864022636, 0.007580605783428673, 0.007505585400391257, 0.00743283680906115, 0.007362142576972097, 0.007293366407590041, 0.007226407931240408, 0.007161183897715917, 0.007097620310476671, 0.007035649071171934, 0.006975206478739171, 0.006916232492717778, 0.006858670315407656, 0.006802466111405336, 0.006747568790497538, 0.006693929823882172, 0.006641503080609068, 0.00659024467878444, 0.006540112848731017, 0.006491067806411954, 0.006443071635997666, 0.006396088180845028, 0.006350082942102486, 0.006305022984187669, 0.006260876846871599, 0.006217614463091992, 0.006175207082324663, 0.0061336271989949065, 0.006092848485444224, 0.006052845729290324, 0.006013594774683773, 0.005975072467320874, 0.00593725660281752, 0.005900125878234963, 0.005863659846664149, 0.005827838874350677, 0.005792644100602873, 0.005758057399806615, 0.00572406134593173, 0.005690639178802526, 0.005657774772533042, 0.005625452605652725, 0.005593657732835489, 0.005562375758355831, 0.005531592810872343, 0.005501295519673155, 0.005471470992127303, 0.005442106792428403, 0.005413190921394584, 0.005384711797362662, 0.005356658238086398, 0.005329019443536032, 0.005301784979607094, 0.00527494476269208, 0.005248489044892057, 0.005222408400151757, 0.005196693710946221, 0.005171336155674666, 0.005146327196655642, 0.005121658568678411, 0.0050973222681975905, 0.005073310542895726, 0.005049615881876246, 0.005026231006185045, 0.00500314885992581, 0.004980362601626709, 0.004957865596109556, 0.004935651406684727, 0.004913713787703777, 0.004892046677464235, 0.0048706441913553, 0.0048495006154358755, 0.004828610400182454, 0.0048079681544990205, 0.004787568640148843, 0.004767406766163607, 0.004747477583734838, 0.004727776281166385, 0.0047082981791159995, 0.004689038725997463, 0.0046699934935745535, 0.004651158172765291, 0.004632528569564531, 0.004614100601208815, 0.004595870292399162, 0.004577833771770123, 0.004559987268411447, 0.004542327108607136]
d4 = [0.056737700712730876, 0.048938501541695434, 0.00400172987738201, 0.0046390570385772545, 0.00470411643438351, 0.004685519020655393, 0.004653779099561106, 0.004620159170281246, 0.0045865332483128185, 0.004553213331816464, 0.0045202450418107, 0.004487628058046367, 0.004455354270189726, 0.004423414456947272, 0.00439179945794943, 0.004360500372164733, 0.00432950858301373, 0.004298815752806551, 0.004268413812393401, 0.004238294950038135, 0.004208451601168006, 0.004178876437948009, 0.004149562360174386, 0.004123497422591438, 0.004115765911697711, 0.0041081395263438125, 0.004100614822745374, 0.004093188445810636, 0.004085857125526449, 0.004078617673837659, 0.004071466981397265, 0.0040644020147238, 0.004057419813233043, 0.004050517486607674, 0.0040436922122277785, 0.0040369412326928256, 0.004030261853423145, 0.0040236514404936585, 0.004017107418465393, 0.004010627268283606, 0.0040042085253984006, 0.003997848777856916, 0.003991545664506102, 0.003985296873313171, 0.003979100139695824, 0.003972953244980371, 0.0039710425736245725, 0.003971019070967419, 0.0039711636145911555, 0.003971473071303411, 0.003971944429796093, 0.003972574795960249, 0.003973361388438068, 0.003974301534444891, 0.003975392665672484, 0.003976632314560913, 0.003978018110532666, 0.003979547776615355, 0.003981219126055979, 0.003983030059217185, 0.003984978560533925, 0.003987062695645083, 0.003989280608645895, 0.003991630519542433, 0.003994110721680322, 0.003996719579464791, 0.003999455525949713, 0.004002317060897376, 0.004005302748515849, 0.004008411215596475, 0.004011641149689549, 0.004014991297181858, 0.004018460461705953, 0.004022047502505455, 0.0040257513328589845, 0.004029570918596459, 0.004033505276750393, 0.0040375534741619035, 0.004041714626230153, 0.004045987895723524, 0.004050372491535725, 0.004054867667726558, 0.004059472722338864, 0.004064186996508123, 0.004069009873417961, 0.004073940777508778, 0.004078979173562924, 0.004084124565912894, 0.004089376497691699, 0.004094734550054824, 0.004100198341606021, 0.004105767527617488, 0.00411144179956624, 0.004117220884409356, 0.004123104544191403, 0.0041290925754582375, 0.0041351848087929355, 0.004141381108420106, 0.004147681371736933, 0.004154085529021856, 0.004160593542954949, 0.0041672054084838095, 0.004173921152342164, 0.004180740832926855, 0.004187664539988756, 0.00419469239443071, 0.004201824548176525, 0.004209061183964469, 0.0042164025151762985, 0.004223848785830597, 0.004231400270390484, 0.004239057273831559, 0.004246820131458939, 0.004254689208975648, 0.004262664902521696, 0.004270747638656314, 0.004278937874396149, 0.004287236097367586, 0.004295642825844492, 0.720500317292825, 0.25687013098027345, 0.0035100142613324614, 0.004229503275333446, 0.004327825624745429, 0.004347545243330586, 0.004357981110839404, 0.004367436562764837, 0.004376880657256166, 0.004386425490365831, 0.004396084580037485, 0.004405860256076366, 0.0044157536185092106, 0.004425765661202785, 0.004435897397566446, 0.004446149874751004, 0.004456524175745713, 0.004467021420005324, 0.004477642764149969, 0.004488389402468762, 0.004499262567688955, 0.004510263531605219, 0.004521393605717794, 0.004532654142177517, 0.004544046534348034, 0.004555572217762371, 0.004567232670918742, 0.004579029416188263, 0.004590964020767974, 0.004603038097609868, 0.004615253306428979, 0.004627611354792283, 0.0046401139992160445, 0.004652763046254282, 0.004665560344791597, 0.004678507837313717, 0.004691607446408952, 0.00470486121315794, 0.004718271210742753, 0.004731839572400531, 0.004745568491389296, 0.004759460222171885, 0.0047735170819236394, 0.004787741452303873, 0.004802135781201589, 0.0048167025845451406, 0.004831444448361477, 0.004846364030644423, 0.004861464063450782, 0.004876747355258004, 0.004892216792979465, 0.0049078753445273016, 0.0049237260611518785, 0.004939772080102323, 0.004956016627185367, 0.004972463019696782, 0.00498911466914187, 0.005005975084455994, 0.0050230478750172836, 0.005040336754020824, 0.005057845541908801, 0.005075578169873474, 0.005093538683762944, 0.0051117312478150545, 0.005130160148893559, 0.005148829800666999, 0.005167744748064695, 0.005186909672004081, 0.0052063293942223865, 0.00522600888239122, 0.005245953255407887, 0.0052661677890561975, 0.00528665792181604, 0.005307429261007579, 0.0053284875891577155, 0.005349838870764456, 0.005371489259415441, 0.005393445105063455, 0.00541571296189125, 0.005438299596374652, 0.005461211996000692]
d5 = [0.7979435868729077, 0.015673092113174247, 0.0045588975881951654, 0.010892726551645415, 0.013469529086034271, 0.013887797272180702, 0.013426857381054091, 0.012709924780428317, 0.011988489262386492, 0.01134209028073574, 0.01078276583807325, 0.010300941966037147, 0.009882880881797895, 0.009516201375451505, 0.00919101167213876, 0.008899687197031492, 0.008636371470122084, 0.00839652243387512, 0.008176567042377014, 0.0079736524666838, 0.007785468976174048, 0.007610122970384214, 0.007446044637648308, 0.007291919671304825, 0.007146637942685663, 0.007009254331636239, 0.0068789584216908395, 0.006755050764367221, 0.00663692408099803, 0.006524048225506451, 0.006415958045692838, 0.006312243502677006, 0.006212541566750884, 0.0061165295229386185, 0.006023919405816924, 0.005934453343755308, 0.005847899642946741, 0.005764049475691202, 0.005682714065752048, 0.0056037222856057944, 0.0055269185952537825, 0.005452161267851974, 0.005379320855636083, 0.005308278858135562, 0.005238926563694513, 0.005171164035978171, 0.005104899226739068, 0.005040047194936115, 0.0049765294188621745, 0.004914273187745843, 0.004853211061916607, 0.004793280394072452, 0.0047344229014816275, 0.00467658428507578, 0.00461971388772775, 0.004563764388098246, 0.0045086915255003746, 0.004454453851638673, 0.004401012507317947, 0.004348331019742968, 0.004296375119646978, 0.0042451125747791085, 0.004194513038994874, 0.004144547914634922, 0.00409519022717264, 0.0040464145105905125, 0.003998196702753809, 0.003950514049433584, 0.0039033450162577754, 0.0038566692081400955, 0.0038104672945982188, 0.003764720941719757, 0.0037194127488513473, 0.003674526190435845, 0.003630045562091899, 0.0035859559310857936, 0.0035422430899465507, 0.0034988935138347, 0.0034558943207509962, 0.0034132332347960315, 0.0033708985517133527, 0.003328879106977878, 0.0033121982936306082, 0.003313869680873327, 0.0033156587542327864, 0.0033175624043474405, 0.0033195775456562604, 0.003321701118111031, 0.003323930088689697, 0.003326261452791468, 0.003328692235443187, 0.003331219492395676, 0.0033338403111037307, 0.0033365518115785475, 0.003339351147156222, 0.003342235505189972, 0.003345202107611134, 0.0033482482114877143, 0.003351371109470036, 0.0033545681301627717, 0.0033578366384876546, 0.0033611740359824616, 0.0033645777609969674, 0.0033680452889612855, 0.0033715741324774617, 0.0033751618415149842, 0.003378806003458079, 0.003382504243192086, 0.0033862542231631876, 0.003390053643342106, 0.003393900241291825, 0.003397791792065119, 0.0034017261082206485, 0.0034057010397399168, 0.0034097144739263507, 0.003413764335343239, 0.003417848585704153, 0.0034219652237398313, 0.0034261122850829384, 0.003430287842103863, 0.0034344900037969195, 0.0034387169155903896, 0.003442966759198751, 0.003447237752422061, 0.0034515281489897465, 0.003455836238364318, 0.0034601603455157726, 0.003464498830762386, 0.0034688500895445618, 0.003473212552187799, 0.0034775846837352686, 0.0034819649836614897, 0.0034863519857100123, 0.0034907442576124215, 0.0034951404008625175, 0.0034995390504937163, 0.003503938874824364, 0.003508338575205605, 0.003512736885779022, 0.00351713257321129, 0.003521524436455037, 0.0035259113064701753, 0.0035302920459718834, 0.003534665549163374, 0.003539030741459226, 0.003543386579212937, 0.003547732049483665, 0.0035520661696659683, 0.0035563879873217186, 0.0035606965798167245]
d6 = [0.05101525415206232, 0.02600482475866417, 0.03876269540240029, 0.0, 0.007459948756180168, 0.0, 0.00401949993564199, 0.0, 0.004081441249440765, 0.0, 0.0040720106078360185, 0.0, 0.004069289071082949, 0.0, 0.004068889118857721, 0.0, 0.004068798376893112, 0.0, 0.004068583058271069, 0.0, 0.004068163133971292, 0.0, 0.0040675244249021025, 0.0, 0.004066664246379803, 0.0, 0.004065581902762516, 0.0, 0.004064277080046308, 0.0, 0.004062749578741975, 0.0, 0.004060999270166454, 0.0, 0.004059026089716311, 0.0, 0.004056830036244685, 0.0, 0.0040544111723190834, 0.0, 0.004051769624629942, 0.0, 0.004048905584390972, 0.0, 0.004045819307707643, 0.0, 0.004042511115811331, 0.0, 0.004038981395356855, 0.0, 0.004035230598553818, 0.0, 0.00403125924337, 0.0, 0.004027067913526916, 0.0, 0.0040226572585936315, 0.0, 0.00401802799389428, 0.0, 0.004013180900449775, 0.0, 0.004008116824826602, 0.0, 0.004002836678883459, 0.0, 0.0039973414395770845, 0.0, 0.003991632148553581, 0.0, 0.003985709911830226, 0.0, 0.003979575899306642, 0.0, 0.003973231344287398, 0.0, 0.003966677542882935, 0.0, 0.00395991585343336, 0.0, 0.003952947695782361, 0.0, 0.003945774550557779, 0.0, 0.003938397958397566, 0.0, 0.003930819519038509, 0.0, 0.003923040890445262, 0.0, 0.0039150637878481165, 0.0, 0.003906889982688955, 0.0, 0.0038985213015666487, 0.0, 0.0038899596251152913, 0.0, 0.003881206886793942, 0.0, 0.003872265071672265, 0.0, 0.003863136215168872, 0.0, 0.003853822401671536, 0.0, 0.0038443257631940453, 0.0, 0.0038346484779328005, 0.0, 0.0038247927688258576, 0.0, 0.0038147609020001694, 0.0, 0.003804555185265013, 0.0, 0.003794177966427781, 0.0, 0.003783631631788298, 0.0, 0.003772918604332376, 0.0, 0.003762041342125655, 0.0, 0.003751002336477627, 0.0, 0.003739804110220013, 0.0, 0.003735298898795758, 0.0, 0.0037613157027880373, 0.0, 0.00378779971769605, 0.0, 0.0038232577319219363, 0.0, 0.0038746905879292193, 0.0, 0.003926981252295292, 0.0, 0.003980164747144022, 0.0, 0.004034277985945023, 0.0, 0.004089359907279988, 0.0, 0.004145451620919172, 0.0, 0.004202596566329708, 0.0, 0.004260840686143519, 0.0, 0.004320232615212083, 0.0, 0.004380823887631502, 0.0, 0.004442669163318147, 0.0, 0.004505826476926655, 0.0, 0.004570357510969236, 0.0, 0.004636327896574199, 0.0, 0.004703807545355154, 0.0, 0.004772871015342739, 0.0, 0.004843597916418307, 0.0, 0.004916073359342299, 0.0, 0.0049903884549260535, 0.0, 0.005066640868887751, 0.0, 0.00514493544133221, 0.0, 0.005225384878757788, 0.0, 0.005308110529365084, 0.0, 0.005393243253728253, 0.0, 0.005480924404737131, 0.0, 0.005571306933574327, 0.0, 0.005664556641445939, 0.0, 0.005760853599829918, 0.0, 0.005860393766778271, 0.0, 0.005963390832779858, 0.0, 0.006070078334178941, 0.0, 0.006180712082248796, 0.0]
d7 = [0.8609884849169467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
d8 = [1.8464946653456935, 0.005282317614477838, 0.0063474541008465835, 0.006462133251521118, 0.0064475636425467275, 0.006417371517335901, 0.006385571085115727, 0.006353919551707721, 0.006322630835677856, 0.0062917215648921054, 0.006261183222187494, 0.006231004367501569, 0.006201173509554181, 0.006171679464505253, 0.006142511387785543, 0.006113658763906127, 0.006085111391261222, 0.006056859367501222, 0.006028893075096686, 0.006001203168023661, 0.005973780558814035, 0.00594661640652161, 0.005919702105149138, 0.005893029272627803, 0.0058665897405232315, 0.0058403755439528915, 0.005814378912297968, 0.005788592260107972, 0.0057630081785422504, 0.005737619427279572, 0.00571241892664176, 0.005687399750221367, 0.005662555117756707, 0.005637878388333295, 0.005613363053996512, 0.005589002733443316, 0.005564791166236649, 0.005540722207010518, 0.005516789820193324, 0.005492988074679683, 0.005469311139006283, 0.005445753276527743, 0.0054223088408176245, 0.005398972271423386, 0.005375738089601789, 0.005352600894317661, 0.0053295553584264965, 0.005306596225012505, 0.005283718303771501, 0.00526091646776905, 0.005238185650055183, 0.00521552084061927, 0.00519291708345504, 0.005170369473639802, 0.005147873154641491, 0.00512542331568433, 0.005103015189302784, 0.005080644048865324, 0.00505830520639261, 0.0050359940103361645, 0.005013705843505356, 0.004991436121068116, 0.0049691802888203185, 0.0049469338211922675, 0.004924692219757443, 0.004902451011601361, 0.004880205747757049, 0.004857952001917187, 0.004835685369032561, 0.00481340146416942, 0.004791095921410804, 0.004768764392731217, 0.004746402547076478, 0.004724006069664277, 0.004701570661012955, 0.004679092036491195, 0.004656565925547529, 0.004633988071429229, 0.004611354230680043, 0.00458866017289683, 0.004565901680579909, 0.004543074549006043, 0.0045201745863079346, 0.00449719761346401, 0.004474139464741622, 0.004450995987790307, 0.004427763044265287, 0.004404436510260901, 0.004381012277046015, 0.004357486251763909, 0.004333854358381739, 0.0043199732870111696, 0.004335572254939191, 0.004351243776833602, 0.00436698966225979, 0.00438281174808175, 0.004398711899483043, 0.004414692010764831, 0.004430754006427229, 0.004446899842204033, 0.004463131506003304, 0.00447945101903624, 0.004495860436951826, 0.004512361850935509, 0.00452895738886161, 0.004545649216590952, 0.004562439539112617, 0.004579330601970355, 0.0045963246924562995, 0.004613424141105771, 0.004630631323073953, 0.004647948659589396, 0.004665378619543414, 0.004682923721056831, 0.00470058653303651, 0.004718369676969925, 0.004736275828674863, 0.004754307719984308, 0.004772468140798125, 0.004790759940971778, 0.004809186032272095, 0.004827749390638125, 0.004846453058141353, 0.004865300145481921, 0.004884293834166442, 0.004903437379020215, 0.00492273411074029, 0.0049421874384756315, 0.004961800852602671, 0.004981577927583025, 0.005001522324916685, 0.005021637796185807, 0.005041928186411138, 0.005062397437147759, 0.005083049590254074, 0.005103888791293976, 0.005124919293442165, 0.005146145461419671, 0.005167571775578583, 0.00518920283617863, 0.00521104336795597, 0.005233098224692423, 0.0052553723941834996, 0.005277871003363632, 0.005300599323521116, 0.00532356277600643, 0.005346766938066239, 0.005370217548834155, 0.0053939205158952674, 0.005417881921819578, 0.0054421080313087344, 0.005466605298519056, 0.005491380374677668, 0.005516440116341226, 0.0055417915937487905, 0.005567442099768449, 0.005593399159302459, 0.0056196705390654245, 0.005668720336327482, 0.005718196173460921, 0.005767695220444624, 0.005817206525613461, 0.005866719013568833, 0.005916221495348983, 0.005965702678364826, 0.0060151511760262455, 0.006064555517018011, 0.006113904154135152, 0.006163185472651378, 0.006212387798123942, 0.006261499403642512, 0.006310508516433222, 0.006359403323795476, 0.006408171978349753, 0.0064568026025446645, 0.006505283292435493, 0.006553602120712876, 0.006601747138948122, 0.006649706379137532, 0.006697467854465122, 0.006745019559377896, 0.006792349468974779, 0.006839445537756728, 0.006886295697779765, 0.006932887856266889, 0.006979209892764127, 0.0070252496558720345, 0.007070994959662125, 0.007116433579855697, 0.007161553249857233, 0.007206341656692317, 0.007250786437047241, 0.007294875173393223, 0.007338595390379732, 0.00738193455157754, 0.007424880056655203, 0.007467419239130413, 0.007509539364747964, 0.007551227630642643, 0.007592471165304593]




import matplotlib.pyplot as plt
# plt.plot(d1)
# plt.plot(d2)
# plt.plot(d3)
# plt.plot(d4)
# plt.plot(d5)
# plt.plot(d6)
# plt.show()
#
# if not arc_failed:
#     max_distances = []
#     for i in range(1, len(path)):
#         stance = path[i]
#         last_q = path[i - 1]
#         max_distances.append(MathUtils.max_joint_angle_distance(stance[7:], last_q[7:]))
#     print("Printing parabolic arc distances")
#     print(max_distances)
#     print(f"max max distance: {np.max(max_distances)}")